/*******************************************************************************
 * File generated from the Banking::bankmodel::model::banking::model::GroupOfOrganizations uml Class
 * Generated by the Acceleo 3 <i>UML to Java</i> generator.
 * Date: 19 October 2024 20:23:29 CEST
 *******************************************************************************/
package bankmodel.model.banking.model;

import java.util.ArrayList;
// Start of user code (user defined imports)

// End of user code

/**
 * Description of GroupOfOrganizations.
 * 
 * @author 
 */
public class GroupOfOrganizations {
	/**
	 * Description of the property members.
	 */
	public ArrayList<OrganizationMember> members = new ArrayList<OrganizationMember>();
	
	// Start of user code (user defined attributes for GroupOfOrganizations)
	
	// End of user code
	
	/**
	 * The constructor.
	 */
	public GroupOfOrganizations() {
		// Start of user code constructor for GroupOfOrganizations)
		super();
		// End of user code
	}
	
	// Start of user code (user defined methods for GroupOfOrganizations)
	
	// End of user code
	
	
	/**
	 * Returns members.
	 * @return members 
	 */
	public ArrayList<OrganizationMember> getMembers() {
		return this.members;
	}
	
	/**
	 * Sets a value to attribute members. 
	 * @param newMembers 
	 */
	public void setMembers(ArrayList<OrganizationMember> newMembers) {
	    this.members = newMembers;
	}
	
	/**
	 * Adds one attribute (if members had a multiple cardinality)
	 * @param organizationMemberToAdd in members
	 */
	public void addOrganizationMemberToMembers(OrganizationMember organizationMemberToAdd) {
		this.members.add(organizationMemberToAdd);
	}
	
	/**
	 * Removes an attribute (if members had a multiple cardinality)
	 * @param organizationMemberToRemove in members
	 */
	public void removeOrganizationMemberToMembers(OrganizationMember organizationMemberToRemove) {
		this.members.remove(organizationMemberToRemove);
	}
	
	/**
	 * Adds all the attribute (if members had a multiple cardinality)
	 * @param organizationMembersToAdd in members
	 */
	public void addAllOrganizationMemberToMembers(ArrayList<OrganizationMember> organizationMembersToAdd) {
		this.members.addAll(organizationMembersToAdd);
	}
	
	/**
	 * Removes all the attribute (if members had a multiple cardinality)
	 * @param organizationMembersToRemove in members
	 */
	public void removeAllOrganizationMemberToMembers(ArrayList<OrganizationMember> organizationMembersToRemove) {
		this.members.removeAll(organizationMembersToRemove);
	}



}

/*******************************************************************************
 * File generated from the ontology::aguiar2018rdbso::model::ontology::swo::LoadedSoftwareSystemCopy uml Class
 * Generated by the Acceleo 3 <i>UML to Java</i> generator.
 * Date: 19 October 2024 20:22:43 CEST
 *******************************************************************************/
package aguiar2018rdbso.model.ontology.swo;

import java.util.ArrayList;
// Start of user code (user defined imports)

// End of user code

/**
 * Description of LoadedSoftwareSystemCopy.
 * 
 * @author 
 */
public class LoadedSoftwareSystemCopy {
	/**
	 * Description of the property softwareSystem.
	 */
	public SoftwareSystem softwareSystem = null;
	
	/**
	 * Description of the property computerSystem.
	 */
	public ArrayList<ComputerSystem> computerSystem = new ArrayList<ComputerSystem>();
	
	// Start of user code (user defined attributes for LoadedSoftwareSystemCopy)
	
	// End of user code
	
	/**
	 * The constructor.
	 */
	public LoadedSoftwareSystemCopy() {
		// Start of user code constructor for LoadedSoftwareSystemCopy)
		super();
		// End of user code
	}
	
	// Start of user code (user defined methods for LoadedSoftwareSystemCopy)
	
	// End of user code
	
	
	/**
	 * Returns softwareSystem.
	 * @return softwareSystem 
	 */
	public SoftwareSystem getSoftwareSystem() {
		return this.softwareSystem;
	}
	
	/**
	 * Sets a value to attribute softwareSystem. 
	 * @param newSoftwareSystem 
	 */
	public void setSoftwareSystem(SoftwareSystem newSoftwareSystem) {
		this.softwareSystem = newSoftwareSystem;
	}

	/**
	 * Returns computerSystem.
	 * @return computerSystem 
	 */
	public ArrayList<ComputerSystem> getComputerSystem() {
		return this.computerSystem;
	}
	
	/**
	 * Sets a value to attribute computerSystem. 
	 * @param newComputerSystem 
	 */
	public void setComputerSystem(ArrayList<ComputerSystem> newComputerSystem) {
	    this.computerSystem = newComputerSystem;
	}
	
	/**
	 * Adds one attribute (if computerSystem had a multiple cardinality)
	 * @param computerSystemToAdd in computerSystem
	 */
	public void addComputerSystemToComputerSystem(ComputerSystem computerSystemToAdd) {
		this.computerSystem.add(computerSystemToAdd);
	}
	
	/**
	 * Removes an attribute (if computerSystem had a multiple cardinality)
	 * @param computerSystemToRemove in computerSystem
	 */
	public void removeComputerSystemToComputerSystem(ComputerSystem computerSystemToRemove) {
		this.computerSystem.remove(computerSystemToRemove);
	}
	
	/**
	 * Adds all the attribute (if computerSystem had a multiple cardinality)
	 * @param computerSystemsToAdd in computerSystem
	 */
	public void addAllComputerSystemToComputerSystem(ArrayList<ComputerSystem> computerSystemsToAdd) {
		this.computerSystem.addAll(computerSystemsToAdd);
	}
	
	/**
	 * Removes all the attribute (if computerSystem had a multiple cardinality)
	 * @param computerSystemsToRemove in computerSystem
	 */
	public void removeAllComputerSystemToComputerSystem(ArrayList<ComputerSystem> computerSystemsToRemove) {
		this.computerSystem.removeAll(computerSystemsToRemove);
	}



}

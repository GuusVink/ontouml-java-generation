/*******************************************************************************
 * File generated from the ontology::aguiar2018rdbso::model::ontology::dbso::InformationSchema uml Class
 * Generated by the Acceleo 3 <i>UML to Java</i> generator.
 * Date: 19 October 2024 20:22:43 CEST
 *******************************************************************************/
package aguiar2018rdbso.model.ontology.dbso;

import java.util.ArrayList;
// Start of user code (user defined imports)

// End of user code

/**
 * Description of InformationSchema.
 * 
 * @author 
 */
public class InformationSchema extends Schema {
	/**
	 * Description of the property dataSchema.
	 */
	public ArrayList<DataSchema> dataSchema = new ArrayList<DataSchema>();
	
	// Start of user code (user defined attributes for InformationSchema)
	
	// End of user code
	
	/**
	 * The constructor.
	 */
	public InformationSchema() {
		// Start of user code constructor for InformationSchema)
		super();
		// End of user code
	}
	
	// Start of user code (user defined methods for InformationSchema)
	
	// End of user code
	
	
	/**
	 * Returns dataSchema.
	 * @return dataSchema 
	 */
	public ArrayList<DataSchema> getDataSchema() {
		return this.dataSchema;
	}
	
	/**
	 * Sets a value to attribute dataSchema. 
	 * @param newDataSchema 
	 */
	public void setDataSchema(ArrayList<DataSchema> newDataSchema) {
	    this.dataSchema = newDataSchema;
	}
	
	/**
	 * Adds one attribute (if dataSchema had a multiple cardinality)
	 * @param dataSchemaToAdd in dataSchema
	 */
	public void addDataSchemaToDataSchema(DataSchema dataSchemaToAdd) {
		this.dataSchema.add(dataSchemaToAdd);
	}
	
	/**
	 * Removes an attribute (if dataSchema had a multiple cardinality)
	 * @param dataSchemaToRemove in dataSchema
	 */
	public void removeDataSchemaToDataSchema(DataSchema dataSchemaToRemove) {
		this.dataSchema.remove(dataSchemaToRemove);
	}
	
	/**
	 * Adds all the attribute (if dataSchema had a multiple cardinality)
	 * @param dataSchemasToAdd in dataSchema
	 */
	public void addAllDataSchemaToDataSchema(ArrayList<DataSchema> dataSchemasToAdd) {
		this.dataSchema.addAll(dataSchemasToAdd);
	}
	
	/**
	 * Removes all the attribute (if dataSchema had a multiple cardinality)
	 * @param dataSchemasToRemove in dataSchema
	 */
	public void removeAllDataSchemaToDataSchema(ArrayList<DataSchema> dataSchemasToRemove) {
		this.dataSchema.removeAll(dataSchemasToRemove);
	}



}

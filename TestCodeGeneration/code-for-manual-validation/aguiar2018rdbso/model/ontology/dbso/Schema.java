/*******************************************************************************
 * File generated from the ontology::aguiar2018rdbso::model::ontology::dbso::Schema uml Class
 * Generated by the Acceleo 3 <i>UML to Java</i> generator.
 * Date: 19 October 2024 20:22:43 CEST
 *******************************************************************************/
package aguiar2018rdbso.model.ontology.dbso;

import aguiar2018rdbso.model.ontology.rdbso.Language;
import aguiar2018rdbso.model.ontology.spo.Artifact;
import aguiar2018rdbso.model.ontology.spo.SoftwareItem;
import java.util.ArrayList;
// Start of user code (user defined imports)

// End of user code

/**
 * Description of Schema.
 * 
 * @author 
 */
public class Schema implements DBMSItem {
	/**
	 * Description of the property database.
	 */
	public Database database = null;
	
	/**
	 * Description of the property dictionary.
	 */
	public Dictionary dictionary = null;
	
	// Start of user code (user defined attributes for Schema)
	
	// End of user code
	
	/**
	 * The constructor.
	 */
	public Schema() {
		// Start of user code constructor for Schema)
		super();
		// End of user code
	}
	
	// Start of user code (user defined methods for Schema)
	
	// End of user code
	/**
	 * Returns databaseSystem.
	 * Originates from implemented interface.
	 * @return databaseSystem 
	 */
	@Override
	public DatabaseSystem getDatabaseSystem() {
		// Start of user code for method getDatabaseSystem
		// TODO implement
		return null;
		// End of user code
	}
	
	/**
	 * Sets a value to attribute databaseSystem. 
	 * Originates from implemented interface.
	 * @param newDatabaseSystem 
	 */
	@Override
	public void setDatabaseSystem(DatabaseSystem newDatabaseSystem) {
		// Start of user code for method setDatabaseSystem
		// TODO implement
		// End of user code
	}
	/**
	 * Returns language.
	 * Originates from implemented interface.
	 * @return language 
	 */
	@Override
	public ArrayList<Language> getLanguage() {
		// Start of user code for method getLanguage
		// TODO implement
		return new ArrayList<Language>();
		// End of user code
	}
	
	/**
	 * Sets a value to attribute language. 
	 * Originates from implemented interface.
	 * @param newLanguage 
	 */
	@Override
	public void setLanguage(ArrayList<Language> newLanguage) {
		// Start of user code for method setLanguage
		// TODO implement
		// End of user code
	}
	/**
	 * Returns loadedDBMSCopy.
	 * Originates from implemented interface.
	 * @return loadedDBMSCopy 
	 */
	@Override
	public ArrayList<LoadedDBMSCopy> getLoadedDBMSCopy() {
		// Start of user code for method getLoadedDBMSCopy
		// TODO implement
		return new ArrayList<LoadedDBMSCopy>();
		// End of user code
	}
	
	/**
	 * Sets a value to attribute loadedDBMSCopy. 
	 * Originates from implemented interface.
	 * @param newLoadedDBMSCopy 
	 */
	@Override
	public void setLoadedDBMSCopy(ArrayList<LoadedDBMSCopy> newLoadedDBMSCopy) {
		// Start of user code for method setLoadedDBMSCopy
		// TODO implement
		// End of user code
	}
	
	
	/**
	 * Returns database.
	 * @return database 
	 */
	public Database getDatabase() {
		return this.database;
	}
	
	/**
	 * Sets a value to attribute database. 
	 * @param newDatabase 
	 */
	public void setDatabase(Database newDatabase) {
		this.database = newDatabase;
	}

	/**
	 * Returns dictionary.
	 * @return dictionary 
	 */
	public Dictionary getDictionary() {
		return this.dictionary;
	}
	
	/**
	 * Sets a value to attribute dictionary. 
	 * @param newDictionary 
	 */
	public void setDictionary(Dictionary newDictionary) {
		this.dictionary = newDictionary;
	}



}

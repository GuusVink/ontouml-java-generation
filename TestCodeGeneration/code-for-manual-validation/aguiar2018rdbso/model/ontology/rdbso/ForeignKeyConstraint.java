/*******************************************************************************
 * File generated from the ontology::aguiar2018rdbso::model::ontology::rdbso::ForeignKeyConstraint uml Class
 * Generated by the Acceleo 3 <i>UML to Java</i> generator.
 * Date: 19 October 2024 20:22:43 CEST
 *******************************************************************************/
package aguiar2018rdbso.model.ontology.rdbso;

import java.util.ArrayList;
// Start of user code (user defined imports)

// End of user code

/**
 * Description of ForeignKeyConstraint.
 * 
 * @author 
 */
public class ForeignKeyConstraint extends ColumnConstraint {
	/**
	 * Description of the property primaryKeyColumn.
	 */
	public ArrayList<PrimaryKeyColumn> primaryKeyColumn = new ArrayList<PrimaryKeyColumn>();
	
	// Start of user code (user defined attributes for ForeignKeyConstraint)
	
	// End of user code
	
	/**
	 * The constructor.
	 */
	public ForeignKeyConstraint() {
		// Start of user code constructor for ForeignKeyConstraint)
		super();
		// End of user code
	}
	
	// Start of user code (user defined methods for ForeignKeyConstraint)
	
	// End of user code
	
	
	/**
	 * Returns primaryKeyColumn.
	 * @return primaryKeyColumn 
	 */
	public ArrayList<PrimaryKeyColumn> getPrimaryKeyColumn() {
		return this.primaryKeyColumn;
	}
	
	/**
	 * Sets a value to attribute primaryKeyColumn. 
	 * @param newPrimaryKeyColumn 
	 */
	public void setPrimaryKeyColumn(ArrayList<PrimaryKeyColumn> newPrimaryKeyColumn) {
	    this.primaryKeyColumn = newPrimaryKeyColumn;
	}
	
	/**
	 * Adds one attribute (if primaryKeyColumn had a multiple cardinality)
	 * @param primaryKeyColumnToAdd in primaryKeyColumn
	 */
	public void addPrimaryKeyColumnToPrimaryKeyColumn(PrimaryKeyColumn primaryKeyColumnToAdd) {
		this.primaryKeyColumn.add(primaryKeyColumnToAdd);
	}
	
	/**
	 * Removes an attribute (if primaryKeyColumn had a multiple cardinality)
	 * @param primaryKeyColumnToRemove in primaryKeyColumn
	 */
	public void removePrimaryKeyColumnToPrimaryKeyColumn(PrimaryKeyColumn primaryKeyColumnToRemove) {
		this.primaryKeyColumn.remove(primaryKeyColumnToRemove);
	}
	
	/**
	 * Adds all the attribute (if primaryKeyColumn had a multiple cardinality)
	 * @param primaryKeyColumnsToAdd in primaryKeyColumn
	 */
	public void addAllPrimaryKeyColumnToPrimaryKeyColumn(ArrayList<PrimaryKeyColumn> primaryKeyColumnsToAdd) {
		this.primaryKeyColumn.addAll(primaryKeyColumnsToAdd);
	}
	
	/**
	 * Removes all the attribute (if primaryKeyColumn had a multiple cardinality)
	 * @param primaryKeyColumnsToRemove in primaryKeyColumn
	 */
	public void removeAllPrimaryKeyColumnToPrimaryKeyColumn(ArrayList<PrimaryKeyColumn> primaryKeyColumnsToRemove) {
		this.primaryKeyColumn.removeAll(primaryKeyColumnsToRemove);
	}



}

/*******************************************************************************
 * File generated from the ontology::aguiar2018rdbso::model::ontology::rdbso::Language uml Class
 * Generated by the Acceleo 3 <i>UML to Java</i> generator.
 * Date: 19 October 2024 20:22:42 CEST
 *******************************************************************************/
package aguiar2018rdbso.model.ontology.rdbso;

import aguiar2018rdbso.model.ontology.spo.Artifact;
import java.util.ArrayList;
// Start of user code (user defined imports)

// End of user code

/**
 * Description of Language.
 * 
 * @author 
 */
public class Language {
	/**
	 * Description of the property artifact.
	 */
	public ArrayList<Artifact> artifact = new ArrayList<Artifact>();
	
	// Start of user code (user defined attributes for Language)
	
	// End of user code
	
	/**
	 * The constructor.
	 */
	public Language() {
		// Start of user code constructor for Language)
		super();
		// End of user code
	}
	
	// Start of user code (user defined methods for Language)
	
	// End of user code
	
	
	/**
	 * Returns artifact.
	 * @return artifact 
	 */
	public ArrayList<Artifact> getArtifact() {
		return this.artifact;
	}
	
	/**
	 * Sets a value to attribute artifact. 
	 * @param newArtifact 
	 */
	public void setArtifact(ArrayList<Artifact> newArtifact) {
	    this.artifact = newArtifact;
	}
	
	/**
	 * Adds one attribute (if artifact had a multiple cardinality)
	 * @param artifactToAdd in artifact
	 */
	public void addArtifactToArtifact(Artifact artifactToAdd) {
		this.artifact.add(artifactToAdd);
	}
	
	/**
	 * Removes an attribute (if artifact had a multiple cardinality)
	 * @param artifactToRemove in artifact
	 */
	public void removeArtifactToArtifact(Artifact artifactToRemove) {
		this.artifact.remove(artifactToRemove);
	}
	
	/**
	 * Adds all the attribute (if artifact had a multiple cardinality)
	 * @param artifactsToAdd in artifact
	 */
	public void addAllArtifactToArtifact(ArrayList<Artifact> artifactsToAdd) {
		this.artifact.addAll(artifactsToAdd);
	}
	
	/**
	 * Removes all the attribute (if artifact had a multiple cardinality)
	 * @param artifactsToRemove in artifact
	 */
	public void removeAllArtifactToArtifact(ArrayList<Artifact> artifactsToRemove) {
		this.artifact.removeAll(artifactsToRemove);
	}



}

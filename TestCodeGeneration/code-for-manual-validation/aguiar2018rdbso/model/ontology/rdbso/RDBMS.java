/*******************************************************************************
 * File generated from the ontology::aguiar2018rdbso::model::ontology::rdbso::RDBMS uml Class
 * Generated by the Acceleo 3 <i>UML to Java</i> generator.
 * Date: 19 October 2024 20:22:42 CEST
 *******************************************************************************/
package aguiar2018rdbso.model.ontology.rdbso;

import aguiar2018rdbso.model.ontology.dbso.DBMS;
import java.util.ArrayList;
// Start of user code (user defined imports)

// End of user code

/**
 * Description of RDBMS.
 * 
 * @author 
 */
public class RDBMS extends DBMS {
	/**
	 * Description of the property loadedRDBMSCopy.
	 */
	public ArrayList<LoadedRDBMSCopy> loadedRDBMSCopy = new ArrayList<LoadedRDBMSCopy>();
	
	/**
	 * Description of the property relationalDataLanguage.
	 */
	public RelationalDataLanguage relationalDataLanguage = null;
	
	// Start of user code (user defined attributes for RDBMS)
	
	// End of user code
	
	/**
	 * The constructor.
	 */
	public RDBMS() {
		// Start of user code constructor for RDBMS)
		super();
		// End of user code
	}
	
	// Start of user code (user defined methods for RDBMS)
	
	// End of user code
	
	
	/**
	 * Returns loadedRDBMSCopy.
	 * @return loadedRDBMSCopy 
	 */
	public ArrayList<LoadedRDBMSCopy> getLoadedRDBMSCopy() {
		return this.loadedRDBMSCopy;
	}
	
	/**
	 * Sets a value to attribute loadedRDBMSCopy. 
	 * @param newLoadedRDBMSCopy 
	 */
	public void setLoadedRDBMSCopy(ArrayList<LoadedRDBMSCopy> newLoadedRDBMSCopy) {
	    this.loadedRDBMSCopy = newLoadedRDBMSCopy;
	}
	
	/**
	 * Adds one attribute (if loadedRDBMSCopy had a multiple cardinality)
	 * @param loadedRDBMSCopyToAdd in loadedRDBMSCopy
	 */
	public void addLoadedRDBMSCopyToLoadedRDBMSCopy(LoadedRDBMSCopy loadedRDBMSCopyToAdd) {
		this.loadedRDBMSCopy.add(loadedRDBMSCopyToAdd);
	}
	
	/**
	 * Removes an attribute (if loadedRDBMSCopy had a multiple cardinality)
	 * @param loadedRDBMSCopyToRemove in loadedRDBMSCopy
	 */
	public void removeLoadedRDBMSCopyToLoadedRDBMSCopy(LoadedRDBMSCopy loadedRDBMSCopyToRemove) {
		this.loadedRDBMSCopy.remove(loadedRDBMSCopyToRemove);
	}
	
	/**
	 * Adds all the attribute (if loadedRDBMSCopy had a multiple cardinality)
	 * @param loadedRDBMSCopysToAdd in loadedRDBMSCopy
	 */
	public void addAllLoadedRDBMSCopyToLoadedRDBMSCopy(ArrayList<LoadedRDBMSCopy> loadedRDBMSCopysToAdd) {
		this.loadedRDBMSCopy.addAll(loadedRDBMSCopysToAdd);
	}
	
	/**
	 * Removes all the attribute (if loadedRDBMSCopy had a multiple cardinality)
	 * @param loadedRDBMSCopysToRemove in loadedRDBMSCopy
	 */
	public void removeAllLoadedRDBMSCopyToLoadedRDBMSCopy(ArrayList<LoadedRDBMSCopy> loadedRDBMSCopysToRemove) {
		this.loadedRDBMSCopy.removeAll(loadedRDBMSCopysToRemove);
	}

	/**
	 * Returns relationalDataLanguage.
	 * @return relationalDataLanguage 
	 */
	public RelationalDataLanguage getRelationalDataLanguage() {
		return this.relationalDataLanguage;
	}
	
	/**
	 * Sets a value to attribute relationalDataLanguage. 
	 * @param newRelationalDataLanguage 
	 */
	public void setRelationalDataLanguage(RelationalDataLanguage newRelationalDataLanguage) {
		this.relationalDataLanguage = newRelationalDataLanguage;
	}



}

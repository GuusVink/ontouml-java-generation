/*******************************************************************************
 * File generated from the ontology::aguiar2018rdbso::model::ontology::rdbso::RelationalDataLanguage uml Class
 * Generated by the Acceleo 3 <i>UML to Java</i> generator.
 * Date: 19 October 2024 20:22:43 CEST
 *******************************************************************************/
package aguiar2018rdbso.model.ontology.rdbso;

import aguiar2018rdbso.model.ontology.dbso.DataLanguage;
import java.util.ArrayList;
// Start of user code (user defined imports)

// End of user code

/**
 * Description of RelationalDataLanguage.
 * 
 * @author 
 */
public class RelationalDataLanguage extends DataLanguage {
	/**
	 * Description of the property rDBMS.
	 */
	public ArrayList<RDBMS> rDBMS = new ArrayList<RDBMS>();
	
	// Start of user code (user defined attributes for RelationalDataLanguage)
	
	// End of user code
	
	/**
	 * The constructor.
	 */
	public RelationalDataLanguage() {
		// Start of user code constructor for RelationalDataLanguage)
		super();
		// End of user code
	}
	
	// Start of user code (user defined methods for RelationalDataLanguage)
	
	// End of user code
	
	
	/**
	 * Returns rDBMS.
	 * @return rDBMS 
	 */
	public ArrayList<RDBMS> getRDBMS() {
		return this.rDBMS;
	}
	
	/**
	 * Sets a value to attribute rDBMS. 
	 * @param newRDBMS 
	 */
	public void setRDBMS(ArrayList<RDBMS> newRDBMS) {
	    this.rDBMS = newRDBMS;
	}
	
	/**
	 * Adds one attribute (if rDBMS had a multiple cardinality)
	 * @param rDBMSToAdd in rDBMS
	 */
	public void addRDBMSToRDBMS(RDBMS rDBMSToAdd) {
		this.rDBMS.add(rDBMSToAdd);
	}
	
	/**
	 * Removes an attribute (if rDBMS had a multiple cardinality)
	 * @param rDBMSToRemove in rDBMS
	 */
	public void removeRDBMSToRDBMS(RDBMS rDBMSToRemove) {
		this.rDBMS.remove(rDBMSToRemove);
	}
	
	/**
	 * Adds all the attribute (if rDBMS had a multiple cardinality)
	 * @param rDBMSsToAdd in rDBMS
	 */
	public void addAllRDBMSToRDBMS(ArrayList<RDBMS> rDBMSsToAdd) {
		this.rDBMS.addAll(rDBMSsToAdd);
	}
	
	/**
	 * Removes all the attribute (if rDBMS had a multiple cardinality)
	 * @param rDBMSsToRemove in rDBMS
	 */
	public void removeAllRDBMSToRDBMS(ArrayList<RDBMS> rDBMSsToRemove) {
		this.rDBMS.removeAll(rDBMSsToRemove);
	}



}

/*******************************************************************************
 * File generated from the ontology::aguiar2018rdbso::model::ontology::rdbso::Column uml Class
 * Generated by the Acceleo 3 <i>UML to Java</i> generator.
 * Date: 19 October 2024 20:22:42 CEST
 *******************************************************************************/
package aguiar2018rdbso.model.ontology.rdbso;

import java.util.ArrayList;
// Start of user code (user defined imports)

// End of user code

/**
 * Description of Column.
 * 
 * @author 
 */
public class Column {
	/**
	 * Description of the property foreignKeyColumnRole.
	 */
	public ForeignKeyColumn foreignKeyColumnRole = null;
	
	/**
	 * Description of the property primaryKeyColumnRole.
	 */
	public PrimaryKeyColumn primaryKeyColumnRole = null;
	
	/**
	 * Description of the property lineType.
	 */
	public LineType lineType = null;
	
	/**
	 * Description of the property columnConstraint.
	 */
	public ArrayList<ColumnConstraint> columnConstraint = new ArrayList<ColumnConstraint>();
	
	// Start of user code (user defined attributes for Column)
	
	// End of user code
	
	/**
	 * The constructor.
	 */
	public Column() {
		// Start of user code constructor for Column)
		super();
		// End of user code
	}
	
	// Start of user code (user defined methods for Column)
	
	// End of user code
	
	
	/**
	 * Returns foreignKeyColumnRole.
	 * @return foreignKeyColumnRole 
	 */
	public ForeignKeyColumn getForeignKeyColumnRole() {
		return this.foreignKeyColumnRole;
	}
	
	/**
	 * Sets a value to attribute foreignKeyColumnRole. 
	 * @param newForeignKeyColumnRole 
	 */
	public void setForeignKeyColumnRole(ForeignKeyColumn newForeignKeyColumnRole) {
		this.foreignKeyColumnRole = newForeignKeyColumnRole;
	}

	/**
	 * Returns primaryKeyColumnRole.
	 * @return primaryKeyColumnRole 
	 */
	public PrimaryKeyColumn getPrimaryKeyColumnRole() {
		return this.primaryKeyColumnRole;
	}
	
	/**
	 * Sets a value to attribute primaryKeyColumnRole. 
	 * @param newPrimaryKeyColumnRole 
	 */
	public void setPrimaryKeyColumnRole(PrimaryKeyColumn newPrimaryKeyColumnRole) {
		this.primaryKeyColumnRole = newPrimaryKeyColumnRole;
	}

	/**
	 * Returns lineType.
	 * @return lineType 
	 */
	public LineType getLineType() {
		return this.lineType;
	}
	
	/**
	 * Sets a value to attribute lineType. 
	 * @param newLineType 
	 */
	public void setLineType(LineType newLineType) {
		this.lineType = newLineType;
	}

	/**
	 * Returns columnConstraint.
	 * @return columnConstraint 
	 */
	public ArrayList<ColumnConstraint> getColumnConstraint() {
		return this.columnConstraint;
	}
	
	/**
	 * Sets a value to attribute columnConstraint. 
	 * @param newColumnConstraint 
	 */
	public void setColumnConstraint(ArrayList<ColumnConstraint> newColumnConstraint) {
	    this.columnConstraint = newColumnConstraint;
	}
	
	/**
	 * Adds one attribute (if columnConstraint had a multiple cardinality)
	 * @param columnConstraintToAdd in columnConstraint
	 */
	public void addColumnConstraintToColumnConstraint(ColumnConstraint columnConstraintToAdd) {
		this.columnConstraint.add(columnConstraintToAdd);
	}
	
	/**
	 * Removes an attribute (if columnConstraint had a multiple cardinality)
	 * @param columnConstraintToRemove in columnConstraint
	 */
	public void removeColumnConstraintToColumnConstraint(ColumnConstraint columnConstraintToRemove) {
		this.columnConstraint.remove(columnConstraintToRemove);
	}
	
	/**
	 * Adds all the attribute (if columnConstraint had a multiple cardinality)
	 * @param columnConstraintsToAdd in columnConstraint
	 */
	public void addAllColumnConstraintToColumnConstraint(ArrayList<ColumnConstraint> columnConstraintsToAdd) {
		this.columnConstraint.addAll(columnConstraintsToAdd);
	}
	
	/**
	 * Removes all the attribute (if columnConstraint had a multiple cardinality)
	 * @param columnConstraintsToRemove in columnConstraint
	 */
	public void removeAllColumnConstraintToColumnConstraint(ArrayList<ColumnConstraint> columnConstraintsToRemove) {
		this.columnConstraint.removeAll(columnConstraintsToRemove);
	}



}

/*******************************************************************************
 * File generated from the ontology::aguiar2018rdbso::model::ontology::rdbso::LoadedRDBMSCopy uml Class
 * Generated by the Acceleo 3 <i>UML to Java</i> generator.
 * Date: 19 October 2024 20:22:42 CEST
 *******************************************************************************/
package aguiar2018rdbso.model.ontology.rdbso;

import java.util.ArrayList;
// Start of user code (user defined imports)

// End of user code

/**
 * Description of LoadedRDBMSCopy.
 * 
 * @author 
 */
public class LoadedRDBMSCopy {
	/**
	 * Description of the property relationalDatabaseSystem.
	 */
	public RelationalDatabaseSystem relationalDatabaseSystem = null;
	
	/**
	 * Description of the property rDBMSItem.
	 */
	public ArrayList<RDBMSItem> rDBMSItem = new ArrayList<RDBMSItem>();
	
	/**
	 * Description of the property rDBMS.
	 */
	public RDBMS rDBMS = null;
	
	// Start of user code (user defined attributes for LoadedRDBMSCopy)
	
	// End of user code
	
	/**
	 * The constructor.
	 */
	public LoadedRDBMSCopy() {
		// Start of user code constructor for LoadedRDBMSCopy)
		super();
		// End of user code
	}
	
	// Start of user code (user defined methods for LoadedRDBMSCopy)
	
	// End of user code
	
	
	/**
	 * Returns relationalDatabaseSystem.
	 * @return relationalDatabaseSystem 
	 */
	public RelationalDatabaseSystem getRelationalDatabaseSystem() {
		return this.relationalDatabaseSystem;
	}
	
	/**
	 * Sets a value to attribute relationalDatabaseSystem. 
	 * @param newRelationalDatabaseSystem 
	 */
	public void setRelationalDatabaseSystem(RelationalDatabaseSystem newRelationalDatabaseSystem) {
		this.relationalDatabaseSystem = newRelationalDatabaseSystem;
	}

	/**
	 * Returns rDBMSItem.
	 * @return rDBMSItem 
	 */
	public ArrayList<RDBMSItem> getRDBMSItem() {
		return this.rDBMSItem;
	}
	
	/**
	 * Sets a value to attribute rDBMSItem. 
	 * @param newRDBMSItem 
	 */
	public void setRDBMSItem(ArrayList<RDBMSItem> newRDBMSItem) {
	    this.rDBMSItem = newRDBMSItem;
	}
	
	/**
	 * Adds one attribute (if rDBMSItem had a multiple cardinality)
	 * @param rDBMSItemToAdd in rDBMSItem
	 */
	public void addRDBMSItemToRDBMSItem(RDBMSItem rDBMSItemToAdd) {
		this.rDBMSItem.add(rDBMSItemToAdd);
	}
	
	/**
	 * Removes an attribute (if rDBMSItem had a multiple cardinality)
	 * @param rDBMSItemToRemove in rDBMSItem
	 */
	public void removeRDBMSItemToRDBMSItem(RDBMSItem rDBMSItemToRemove) {
		this.rDBMSItem.remove(rDBMSItemToRemove);
	}
	
	/**
	 * Adds all the attribute (if rDBMSItem had a multiple cardinality)
	 * @param rDBMSItemsToAdd in rDBMSItem
	 */
	public void addAllRDBMSItemToRDBMSItem(ArrayList<RDBMSItem> rDBMSItemsToAdd) {
		this.rDBMSItem.addAll(rDBMSItemsToAdd);
	}
	
	/**
	 * Removes all the attribute (if rDBMSItem had a multiple cardinality)
	 * @param rDBMSItemsToRemove in rDBMSItem
	 */
	public void removeAllRDBMSItemToRDBMSItem(ArrayList<RDBMSItem> rDBMSItemsToRemove) {
		this.rDBMSItem.removeAll(rDBMSItemsToRemove);
	}

	/**
	 * Returns rDBMS.
	 * @return rDBMS 
	 */
	public RDBMS getRDBMS() {
		return this.rDBMS;
	}
	
	/**
	 * Sets a value to attribute rDBMS. 
	 * @param newRDBMS 
	 */
	public void setRDBMS(RDBMS newRDBMS) {
		this.rDBMS = newRDBMS;
	}



}

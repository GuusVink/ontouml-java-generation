/*******************************************************************************
 * File generated from the ontology::aguiar2018rdbso::model::ontology::rdbso::BaseTable uml Class
 * Generated by the Acceleo 3 <i>UML to Java</i> generator.
 * Date: 19 October 2024 20:22:43 CEST
 *******************************************************************************/
package aguiar2018rdbso.model.ontology.rdbso;

import java.util.ArrayList;
// Start of user code (user defined imports)

// End of user code

/**
 * Description of BaseTable.
 * 
 * @author 
 */
public class BaseTable extends Table {
	/**
	 * Description of the property derivedTable.
	 */
	public ArrayList<DerivedTable> derivedTable = new ArrayList<DerivedTable>();
	
	// Start of user code (user defined attributes for BaseTable)
	
	// End of user code
	
	/**
	 * The constructor.
	 */
	public BaseTable() {
		// Start of user code constructor for BaseTable)
		super();
		// End of user code
	}
	
	// Start of user code (user defined methods for BaseTable)
	
	// End of user code
	
	
	/**
	 * Returns derivedTable.
	 * @return derivedTable 
	 */
	public ArrayList<DerivedTable> getDerivedTable() {
		return this.derivedTable;
	}
	
	/**
	 * Sets a value to attribute derivedTable. 
	 * @param newDerivedTable 
	 */
	public void setDerivedTable(ArrayList<DerivedTable> newDerivedTable) {
	    this.derivedTable = newDerivedTable;
	}
	
	/**
	 * Adds one attribute (if derivedTable had a multiple cardinality)
	 * @param derivedTableToAdd in derivedTable
	 */
	public void addDerivedTableToDerivedTable(DerivedTable derivedTableToAdd) {
		this.derivedTable.add(derivedTableToAdd);
	}
	
	/**
	 * Removes an attribute (if derivedTable had a multiple cardinality)
	 * @param derivedTableToRemove in derivedTable
	 */
	public void removeDerivedTableToDerivedTable(DerivedTable derivedTableToRemove) {
		this.derivedTable.remove(derivedTableToRemove);
	}
	
	/**
	 * Adds all the attribute (if derivedTable had a multiple cardinality)
	 * @param derivedTablesToAdd in derivedTable
	 */
	public void addAllDerivedTableToDerivedTable(ArrayList<DerivedTable> derivedTablesToAdd) {
		this.derivedTable.addAll(derivedTablesToAdd);
	}
	
	/**
	 * Removes all the attribute (if derivedTable had a multiple cardinality)
	 * @param derivedTablesToRemove in derivedTable
	 */
	public void removeAllDerivedTableToDerivedTable(ArrayList<DerivedTable> derivedTablesToRemove) {
		this.derivedTable.removeAll(derivedTablesToRemove);
	}



}

/*******************************************************************************
 * File generated from the Normative Acts::barcelos2013normativeacts::model::normative_acts::normative_acts::NormativeAct uml Class
 * Generated by the Acceleo 3 <i>UML to Java</i> generator.
 * Date: 19 October 2024 20:23:49 CEST
 *******************************************************************************/
package barcelos2013normativeacts.model.normative_acts.normative_acts;

import java.util.ArrayList;
// Start of user code (user defined imports)

// End of user code

/**
 * Description of NormativeAct.
 * 
 * @author 
 */
public class NormativeAct {
	/**
	 * Description of the property preamble.
	 */
	public Preamble preamble = null;
	
	/**
	 * Description of the property number.
	 */
	public int number = 0;
	
	/**
	 * Description of the property ordinaryArticle.
	 */
	public ArrayList<OrdinaryArticle> ordinaryArticle = new ArrayList<OrdinaryArticle>();
	
	/**
	 * Description of the property brief.
	 */
	public Brief brief = null;
	
	/**
	 * Description of the property hierarchy.
	 */
	public int hierarchy = 0;
	
	/**
	 * Description of the property durationClause.
	 */
	public ArrayList<DurationClause> durationClause = new ArrayList<DurationClause>();
	
	/**
	 * Description of the property revocationClause.
	 */
	public ArrayList<RevocationClause> revocationClause = new ArrayList<RevocationClause>();
	
	/**
	 * Description of the property epigraph.
	 */
	public Epigraph epigraph = null;
	
	// Start of user code (user defined attributes for NormativeAct)
	
	// End of user code
	
	/**
	 * The constructor.
	 */
	public NormativeAct() {
		// Start of user code constructor for NormativeAct)
		super();
		// End of user code
	}
	
	// Start of user code (user defined methods for NormativeAct)
	
	// End of user code
	
	
	/**
	 * Returns preamble.
	 * @return preamble 
	 */
	public Preamble getPreamble() {
		return this.preamble;
	}
	
	/**
	 * Sets a value to attribute preamble. 
	 * @param newPreamble 
	 */
	public void setPreamble(Preamble newPreamble) {
		this.preamble = newPreamble;
	}

	/**
	 * Returns number.
	 * @return number 
	 */
	public int getNumber() {
		return this.number;
	}
	
	/**
	 * Sets a value to attribute number. 
	 * @param newNumber 
	 */
	public void setNumber(int newNumber) {
		this.number = newNumber;
	}

	/**
	 * Returns ordinaryArticle.
	 * @return ordinaryArticle 
	 */
	public ArrayList<OrdinaryArticle> getOrdinaryArticle() {
		return this.ordinaryArticle;
	}
	
	/**
	 * Sets a value to attribute ordinaryArticle. 
	 * @param newOrdinaryArticle 
	 */
	public void setOrdinaryArticle(ArrayList<OrdinaryArticle> newOrdinaryArticle) {
	    this.ordinaryArticle = newOrdinaryArticle;
	}
	
	/**
	 * Adds one attribute (if ordinaryArticle had a multiple cardinality)
	 * @param ordinaryArticleToAdd in ordinaryArticle
	 */
	public void addOrdinaryArticleToOrdinaryArticle(OrdinaryArticle ordinaryArticleToAdd) {
		this.ordinaryArticle.add(ordinaryArticleToAdd);
	}
	
	/**
	 * Removes an attribute (if ordinaryArticle had a multiple cardinality)
	 * @param ordinaryArticleToRemove in ordinaryArticle
	 */
	public void removeOrdinaryArticleToOrdinaryArticle(OrdinaryArticle ordinaryArticleToRemove) {
		this.ordinaryArticle.remove(ordinaryArticleToRemove);
	}
	
	/**
	 * Adds all the attribute (if ordinaryArticle had a multiple cardinality)
	 * @param ordinaryArticlesToAdd in ordinaryArticle
	 */
	public void addAllOrdinaryArticleToOrdinaryArticle(ArrayList<OrdinaryArticle> ordinaryArticlesToAdd) {
		this.ordinaryArticle.addAll(ordinaryArticlesToAdd);
	}
	
	/**
	 * Removes all the attribute (if ordinaryArticle had a multiple cardinality)
	 * @param ordinaryArticlesToRemove in ordinaryArticle
	 */
	public void removeAllOrdinaryArticleToOrdinaryArticle(ArrayList<OrdinaryArticle> ordinaryArticlesToRemove) {
		this.ordinaryArticle.removeAll(ordinaryArticlesToRemove);
	}

	/**
	 * Returns brief.
	 * @return brief 
	 */
	public Brief getBrief() {
		return this.brief;
	}
	
	/**
	 * Sets a value to attribute brief. 
	 * @param newBrief 
	 */
	public void setBrief(Brief newBrief) {
		this.brief = newBrief;
	}

	/**
	 * Returns hierarchy.
	 * @return hierarchy 
	 */
	public int getHierarchy() {
		return this.hierarchy;
	}
	
	/**
	 * Sets a value to attribute hierarchy. 
	 * @param newHierarchy 
	 */
	public void setHierarchy(int newHierarchy) {
		this.hierarchy = newHierarchy;
	}

	/**
	 * Returns durationClause.
	 * @return durationClause 
	 */
	public ArrayList<DurationClause> getDurationClause() {
		return this.durationClause;
	}
	
	/**
	 * Sets a value to attribute durationClause. 
	 * @param newDurationClause 
	 */
	public void setDurationClause(ArrayList<DurationClause> newDurationClause) {
	    this.durationClause = newDurationClause;
	}
	
	/**
	 * Adds one attribute (if durationClause had a multiple cardinality)
	 * @param durationClauseToAdd in durationClause
	 */
	public void addDurationClauseToDurationClause(DurationClause durationClauseToAdd) {
		this.durationClause.add(durationClauseToAdd);
	}
	
	/**
	 * Removes an attribute (if durationClause had a multiple cardinality)
	 * @param durationClauseToRemove in durationClause
	 */
	public void removeDurationClauseToDurationClause(DurationClause durationClauseToRemove) {
		this.durationClause.remove(durationClauseToRemove);
	}
	
	/**
	 * Adds all the attribute (if durationClause had a multiple cardinality)
	 * @param durationClausesToAdd in durationClause
	 */
	public void addAllDurationClauseToDurationClause(ArrayList<DurationClause> durationClausesToAdd) {
		this.durationClause.addAll(durationClausesToAdd);
	}
	
	/**
	 * Removes all the attribute (if durationClause had a multiple cardinality)
	 * @param durationClausesToRemove in durationClause
	 */
	public void removeAllDurationClauseToDurationClause(ArrayList<DurationClause> durationClausesToRemove) {
		this.durationClause.removeAll(durationClausesToRemove);
	}

	/**
	 * Returns revocationClause.
	 * @return revocationClause 
	 */
	public ArrayList<RevocationClause> getRevocationClause() {
		return this.revocationClause;
	}
	
	/**
	 * Sets a value to attribute revocationClause. 
	 * @param newRevocationClause 
	 */
	public void setRevocationClause(ArrayList<RevocationClause> newRevocationClause) {
	    this.revocationClause = newRevocationClause;
	}
	
	/**
	 * Adds one attribute (if revocationClause had a multiple cardinality)
	 * @param revocationClauseToAdd in revocationClause
	 */
	public void addRevocationClauseToRevocationClause(RevocationClause revocationClauseToAdd) {
		this.revocationClause.add(revocationClauseToAdd);
	}
	
	/**
	 * Removes an attribute (if revocationClause had a multiple cardinality)
	 * @param revocationClauseToRemove in revocationClause
	 */
	public void removeRevocationClauseToRevocationClause(RevocationClause revocationClauseToRemove) {
		this.revocationClause.remove(revocationClauseToRemove);
	}
	
	/**
	 * Adds all the attribute (if revocationClause had a multiple cardinality)
	 * @param revocationClausesToAdd in revocationClause
	 */
	public void addAllRevocationClauseToRevocationClause(ArrayList<RevocationClause> revocationClausesToAdd) {
		this.revocationClause.addAll(revocationClausesToAdd);
	}
	
	/**
	 * Removes all the attribute (if revocationClause had a multiple cardinality)
	 * @param revocationClausesToRemove in revocationClause
	 */
	public void removeAllRevocationClauseToRevocationClause(ArrayList<RevocationClause> revocationClausesToRemove) {
		this.revocationClause.removeAll(revocationClausesToRemove);
	}

	/**
	 * Returns epigraph.
	 * @return epigraph 
	 */
	public Epigraph getEpigraph() {
		return this.epigraph;
	}
	
	/**
	 * Sets a value to attribute epigraph. 
	 * @param newEpigraph 
	 */
	public void setEpigraph(Epigraph newEpigraph) {
		this.epigraph = newEpigraph;
	}



}

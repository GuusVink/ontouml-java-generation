/*******************************************************************************
 * File generated from the Project Management Ontology::projectmanagementontology::model::project_management_ontology::project_management_ontology::PerformedActivity uml Class
 * Generated by the Acceleo 3 <i>UML to Java</i> generator.
 * Date: 31 October 2024 16:51:36 CET
 *******************************************************************************/
package projectmanagementontology.model.project_management_ontology.project_management_ontology;

import java.util.ArrayList;
// Start of user code (user defined imports)

// End of user code

/**
 * Description of PerformedActivity.
 * 
 * @author 
 */
public class PerformedActivity implements ActivityPhase {
	/**
	 * Description of the property resourceAllocation.
	 */
	public ArrayList<ResourceAllocation> resourceAllocation = new ArrayList<ResourceAllocation>();
	
	// Start of user code (user defined attributes for PerformedActivity)
	
	// End of user code
	
	/**
	 * The constructor.
	 */
	public PerformedActivity() {
		// Start of user code constructor for PerformedActivity)
		super();
		// End of user code
	}
	
	// Start of user code (user defined methods for PerformedActivity)
	
	// End of user code
	/**
	 * Returns activity.
	 * Originates from implemented interface.
	 * @return activity 
	 */
	@Override
	public Activity getActivity() {
		// Start of user code for method getActivity
		// TODO implement
		return null;
		// End of user code
	}
	
	
	/**
	 * Returns resourceAllocation.
	 * @return resourceAllocation 
	 */
	public ArrayList<ResourceAllocation> getResourceAllocation() {
		return this.resourceAllocation;
	}
	
	/**
	 * Sets a value to attribute resourceAllocation. 
	 * @param newResourceAllocation 
	 */
	public void setResourceAllocation(ArrayList<ResourceAllocation> newResourceAllocation) {
	    this.resourceAllocation = newResourceAllocation;
	}
	
	/**
	 * Adds one attribute (if resourceAllocation had a multiple cardinality)
	 * @param resourceAllocationToAdd in resourceAllocation
	 */
	public void addResourceAllocationToResourceAllocation(ResourceAllocation resourceAllocationToAdd) {
		this.resourceAllocation.add(resourceAllocationToAdd);
	}
	
	/**
	 * Removes an attribute (if resourceAllocation had a multiple cardinality)
	 * @param resourceAllocationToRemove in resourceAllocation
	 */
	public void removeResourceAllocationToResourceAllocation(ResourceAllocation resourceAllocationToRemove) {
		this.resourceAllocation.remove(resourceAllocationToRemove);
	}
	
	/**
	 * Adds all the attribute (if resourceAllocation had a multiple cardinality)
	 * @param resourceAllocationsToAdd in resourceAllocation
	 */
	public void addAllResourceAllocationToResourceAllocation(ArrayList<ResourceAllocation> resourceAllocationsToAdd) {
		this.resourceAllocation.addAll(resourceAllocationsToAdd);
	}
	
	/**
	 * Removes all the attribute (if resourceAllocation had a multiple cardinality)
	 * @param resourceAllocationsToRemove in resourceAllocation
	 */
	public void removeAllResourceAllocationToResourceAllocation(ArrayList<ResourceAllocation> resourceAllocationsToRemove) {
		this.resourceAllocation.removeAll(resourceAllocationsToRemove);
	}



}

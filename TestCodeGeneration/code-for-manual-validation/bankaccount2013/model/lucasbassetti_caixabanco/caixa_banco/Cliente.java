/*******************************************************************************
 * File generated from the LucasBassetti_CaixaBanco::bankaccount2013::model::lucasbassetti_caixabanco::caixa_banco::Cliente uml Class
 * Generated by the Acceleo 3 <i>UML to Java</i> generator.
 * Date: 19 October 2024 20:23:12 CEST
 *******************************************************************************/
package bankaccount2013.model.lucasbassetti_caixabanco.caixa_banco;

import java.util.ArrayList;
// Start of user code (user defined imports)

// End of user code

/**
 * Description of Cliente.
 * 
 * @author 
 */
public class Cliente {
	/**
	 * Description of the property op_cliente.
	 */
	public ArrayList<Operao> op_cliente = new ArrayList<Operao>();
	
	/**
	 * Description of the property pessoa.
	 */
	public final Pessoa pessoa = null;
	
	/**
	 * Description of the property recibo.
	 */
	public ArrayList<Recibo> recibo = new ArrayList<Recibo>();
	
	// Start of user code (user defined attributes for Cliente)
	
	// End of user code
	
	/**
	 * The constructor.
	 */
	public Cliente() {
		// Start of user code constructor for Cliente)
		super();
		// End of user code
	}
	
	// Start of user code (user defined methods for Cliente)
	
	// End of user code
	
	
	/**
	 * Returns op_cliente.
	 * @return op_cliente 
	 */
	public ArrayList<Operao> getOp_cliente() {
		return this.op_cliente;
	}
	
	/**
	 * Sets a value to attribute op_cliente. 
	 * @param newOp_cliente 
	 */
	public void setOp_cliente(ArrayList<Operao> newOp_cliente) {
	    this.op_cliente = newOp_cliente;
	}
	
	/**
	 * Adds one attribute (if op_cliente had a multiple cardinality)
	 * @param operaoToAdd in op_cliente
	 */
	public void addOperaoToOp_cliente(Operao operaoToAdd) {
		this.op_cliente.add(operaoToAdd);
	}
	
	/**
	 * Removes an attribute (if op_cliente had a multiple cardinality)
	 * @param operaoToRemove in op_cliente
	 */
	public void removeOperaoToOp_cliente(Operao operaoToRemove) {
		this.op_cliente.remove(operaoToRemove);
	}
	
	/**
	 * Adds all the attribute (if op_cliente had a multiple cardinality)
	 * @param operaosToAdd in op_cliente
	 */
	public void addAllOperaoToOp_cliente(ArrayList<Operao> operaosToAdd) {
		this.op_cliente.addAll(operaosToAdd);
	}
	
	/**
	 * Removes all the attribute (if op_cliente had a multiple cardinality)
	 * @param operaosToRemove in op_cliente
	 */
	public void removeAllOperaoToOp_cliente(ArrayList<Operao> operaosToRemove) {
		this.op_cliente.removeAll(operaosToRemove);
	}

	/**
	 * Returns pessoa.
	 * @return pessoa 
	 */
	public Pessoa getPessoa() {
		return this.pessoa;
	}

	/**
	 * Returns recibo.
	 * @return recibo 
	 */
	public ArrayList<Recibo> getRecibo() {
		return this.recibo;
	}
	
	/**
	 * Sets a value to attribute recibo. 
	 * @param newRecibo 
	 */
	public void setRecibo(ArrayList<Recibo> newRecibo) {
	    this.recibo = newRecibo;
	}
	
	/**
	 * Adds one attribute (if recibo had a multiple cardinality)
	 * @param reciboToAdd in recibo
	 */
	public void addReciboToRecibo(Recibo reciboToAdd) {
		this.recibo.add(reciboToAdd);
	}
	
	/**
	 * Removes an attribute (if recibo had a multiple cardinality)
	 * @param reciboToRemove in recibo
	 */
	public void removeReciboToRecibo(Recibo reciboToRemove) {
		this.recibo.remove(reciboToRemove);
	}
	
	/**
	 * Adds all the attribute (if recibo had a multiple cardinality)
	 * @param recibosToAdd in recibo
	 */
	public void addAllReciboToRecibo(ArrayList<Recibo> recibosToAdd) {
		this.recibo.addAll(recibosToAdd);
	}
	
	/**
	 * Removes all the attribute (if recibo had a multiple cardinality)
	 * @param recibosToRemove in recibo
	 */
	public void removeAllReciboToRecibo(ArrayList<Recibo> recibosToRemove) {
		this.recibo.removeAll(recibosToRemove);
	}



}
